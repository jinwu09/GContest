// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String         @id @default(uuid())
  first_name   String
  last_name    String
  username     String
  school       String?
  email        String         @unique
  password     String
  Answer       Answer[]
  Quiz         Quiz[]
  token        Token[]
  answeredQuiz AnsweredQuiz[]
}

model Token {
  id      String @id @default(uuid())
  Users   Users  @relation(fields: [usersId], references: [id])
  usersId String @unique
  token   String @unique @default(uuid())
}

model Answer {
  id             String        @id @default(uuid())
  Quiz           Quiz          @relation(fields: [quizId], references: [id])
  quizId         String
  Question       Question      @relation(fields: [questionId], references: [id])
  questionId     String
  choice         Choice?       @relation(fields: [choiceId], references: [id])
  choiceId       String?
  Users          Users         @relation(fields: [usersId], references: [id])
  usersId        String
  answered_at    DateTime      @default(now())
  AnsweredQuiz   AnsweredQuiz? @relation(fields: [answeredQuizId], references: [id])
  answeredQuizId String?
}

model Quiz {
  id         String         @id @default(uuid())
  title      String
  password   String?
  room       String?        @unique
  status     String
  creator    Users          @relation(fields: [creator_id], references: [id])
  creator_id String
  created_at DateTime       @default(dbgenerated("current_timestamp(3)"))
  start_at   DateTime
  ends_at    DateTime
  question   Question[]
  answer     Answer[]
  totalScore AnsweredQuiz[]
}

model AnsweredQuiz {
  id         String   @id @default(uuid())
  Score      Int
  created_at DateTime @default(now())
  Quiz       Quiz?    @relation(fields: [quizId], references: [id])
  quizId     String?
  answer     Answer[]
  Users      Users?   @relation(fields: [usersId], references: [id])
  usersId    String?
}

model Question {
  id      String   @id @default(uuid())
  content String
  score   Int
  choice  Choice[]
  answer  Answer[]
  Quiz    Quiz     @relation(fields: [quizId], references: [id])
  quizId  String
}

model Choice {
  id         String    @id @default(uuid())
  content    String
  is_correct Boolean
  answer     Answer[]
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}
